---
# Release Service 'Called workflow'
# Publishes Neu.ro service as ghcr.io Docker image and Helm Chart,
# Create a github release with linked issues and pull requests

on:
  workflow_call:
    inputs:
      helm_charts:
        description: A space-separated list of helm charts
        required: true
        type: string
      version:
        description: Helm chart version to deploy
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false

permissions:
  contents: read
  id-token: write

jobs:
  release:
    name: Deploy on dev
    runs-on: ubuntu-latest
    steps:
    - name: Checkout commit
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install Helm
      uses: azure/setup-helm@v2.0
      with:
        version: v3.9.0
    - name: Login to ghcr.io
      uses: docker/login-action@v1.12.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
    # - name: Update kube config
    #   run: aws eks --region us-east-1 update-kubeconfig --name aws-dev
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: projects/36934857124/locations/global/workloadIdentityPools/github/providers/github
        service_account: github@development-374312.iam.gserviceaccount.com
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
    - name: Update kube config
      run: gcloud container clusters get-credentials dev -z us-central1-a
    - name: Deploy to kubernetes
      run: |
        echo $CR_TOKEN | helm registry login ghcr.io -u x-access-token --password-stdin
        for HELM_CHART in $CHARTS; do
          helm upgrade $HELM_CHART \
            oci://ghcr.io/neuro-inc/helm-charts/$HELM_CHART \
            --version ${{ inputs.version }} \
            -f charts/$HELM_CHART/values-dev.yaml \
            --namespace platform --install --wait --timeout 600s
        done
      env:
        CHARTS: ${{ inputs.helm_charts }}
        CR_TOKEN: ${{ github.token }}
